# @see https://github.com/voxpupuli/puppet-snmp/blob/master/manifests/init.pp
type Gin::SNMP = Struct[
  {
    Optional['accesses']                 => Array[String[1]],
    Optional['agentaddress']             => Array[String[1]],
    Optional['agentx_perms']             => Stdlib::Filemode,
    Optional['agentx_ping_interval']     => Integer,
    Optional['agentx_retries']           => Integer[0],
    Optional['agentx_socket']            => String[1],
    Optional['agentx_timeout']           => Integer[0],
    Optional['autoupgrade']              => Boolean,
    Optional['com2sec']                  => Array[String[1]],
    Optional['com2sec6']                 => Array[String[1]],
    Optional['contact']                  => String[1],
    Optional['disable_authorization']    => Enum['yes','no'],
    Optional['dlmod']                    => Array[String[1]],
    Optional['do_not_log_tcpwrappers']   => Enum['yes','no'],
    Optional['do_not_log_traps']         => Enum['yes','no'],
    Optional['ensure']                   => Enum['present','absent'],
    Optional['extends']                  => Array[String[1]],
    Optional['groups']                   => Array[String[1]],
    Optional['location']                 => String[1],
    Optional['manage_client']            => Boolean,
    Optional['manage_snmptrapd']         => Boolean,
    Optional['master']                   => Boolean,
    Optional['openmanage_enable']        => Boolean,
    Optional['package_name']             => String[1],
    Optional['pass']                     => Array[String[1]],
    Optional['pass_persist']             => Array[String[1]],
    Optional['ro_community']             => Variant[Undef, String[1], Array[String[1]]],
    Optional['ro_community6']            => Variant[Undef, String[1], Array[String[1]]],
    Optional['ro_network']               => Variant[Array, Stdlib::IP::Address::V4, Stdlib::IP::Address::V4::CIDR],
    Optional['ro_network6']              => Variant[Array, Stdlib::IP::Address::V6, Stdlib::IP::Address::V6::CIDR],
    Optional['rw_community']             => Variant[Undef, String[1], Array[String[1]]],
    Optional['rw_community6']            => Variant[Undef, String[1], Array[String[1]]],
    Optional['rw_network']               => Variant[Array, Stdlib::IP::Address::V4, Stdlib::IP::Address::V4::CIDR],
    Optional['rw_network6']              => Variant[Array, Stdlib::IP::Address::V6, Stdlib::IP::Address::V6::CIDR],
    Optional['service_config']           => Stdlib::Absolutepath,
    Optional['service_config_dir_group'] => String[1],
    Optional['service_config_dir_owner'] => String[1],
    Optional['service_config_dir_path']  => Stdlib::Absolutepath,
    Optional['service_config_dir_perms'] => String[1],
    Optional['service_config_perms']     => Stdlib::Filemode,
    Optional['service_enable']           => Boolean,
    Optional['service_ensure']           => Stdlib::Ensure::Service,
    Optional['service_hasrestart']       => Boolean,
    Optional['service_hasstatus']        => Boolean,
    Optional['service_name']             => String[1],
    Optional['services']                 => Integer,
    Optional['snmp_config']              => Array[String[1]],
    Optional['snmpd_config']             => Array[String[1]],
    Optional['snmpd_options']            => String[1],
    Optional['snmptrapd_config']         => Array[String[1]],
    Optional['snmptrapd_options']        => String[1],
    Optional['snmptrapd_package_name']   => String[1],
    Optional['snmptrapdaddr']            => Array[String[1]],
    Optional['snmpv2_enable']            => Boolean,
    Optional['sysconfig']                => Stdlib::Absolutepath,
    Optional['sysname']                  => String[1],
    Optional['trap_forwards']            => Array[String[1]],
    Optional['trap_handlers']            => Array[String[1]],
    Optional['trap_service_config']      => Stdlib::Absolutepath,
    Optional['trap_service_enable']      => Boolean,
    Optional['trap_service_ensure']      => Stdlib::Ensure::Service,
    Optional['trap_service_hasrestart']  => Boolean,
    Optional['trap_service_hasstatus']   => Boolean,
    Optional['trap_service_name']        => String[1],
    Optional['trap_sysconfig']           => Stdlib::Absolutepath,
    Optional['var_net_snmp']             => Stdlib::Absolutepath,
    Optional['varnetsnmp_group']         => String[1],
    Optional['varnetsnmp_owner']         => String[1],
    Optional['varnetsnmp_perms']         => Stdlib::Filemode,
    Optional['views']                    => Array[String[1]],
  }
]

# @see https://github.com/voxpupuli/puppet-rkhunter/blob/master/manifests/init.pp
type Gin::Rkhunter = Struct[
  {
    Optional['allow_ssh_prot_v1']            => Variant[Integer[0, 2], String[1]],
    Optional['allow_ssh_root_user']          => Enum['yes', 'no', 'unset'],
    Optional['allow_syslog_remote_logging']  => Boolean,
    Optional['allowdevfile']                 => Array,
    Optional['allowhiddendir']               => Array,
    Optional['allowhiddenfile']              => Array,
    Optional['allowipcpid']                  => Array[String[1]],
    Optional['allowipcproc']                 => Array[String[1]],
    Optional['allowipcuser']                 => Array[String[1]],
    Optional['allowprocdelfile']             => Array[String[1]],
    Optional['allowproclisten']              => Array[String[1]],
    Optional['allowpromiscif']               => Array[String[1]],
    Optional['app_whitelist']                => Array[String[1]],
    Optional['append_log']                   => Boolean,
    Optional['attrwhitelist']                => Array[Stdlib::Absolutepath],
    Optional['auto_x_detect']                => Boolean,
    Optional['bindir']                       => String[1],
    Optional['color_set2']                   => Boolean,
    Optional['copy_log_on_error']            => Boolean,
    Optional['dbdir']                        => Stdlib::Absolutepath,
    Optional['disable_tests']                => String[1],
    Optional['disable_unhide']               => Variant[Integer[0, 2], Enum['0', '1', '2']],
    Optional['empty_logfiles']               => String[1],
    Optional['enable_tests']                 => String[1],
    Optional['existwhitelist']               => Array,
    Optional['hash_cmd']                     => String[1],
    Optional['hash_fld_idx']                 => String[1],
    Optional['ignore_prelink_dep_err']       => Array[Stdlib::Absolutepath],
    Optional['immutable_set']                => Variant[Boolean, Integer[0, 1], String[1]],
    Optional['immutewhitelist']              => Array[String[1]],
    Optional['inetd_allowed_svc']            => Array[String[1]],
    Optional['inetd_conf_path']              => Stdlib::Absolutepath,
    Optional['installdir']                   => Stdlib::Absolutepath,
    Optional['ipc_seg_size']                 => Variant[String[1], Integer],
    Optional['language']                     => Rkhunter::Language,
    Optional['local_mirror']                 => Stdlib::HTTPUrl,
    Optional['lock_timeout']                 => Variant[Integer[0], String[1]],
    Optional['logfile']                      => Stdlib::Absolutepath,
    Optional['mail_cmd']                     => String[1],
    Optional['mail_on_warning']              => String[1],
    Optional['mirrors_mode']                 => Enum['any', 'local', 'remote'],
    Optional['missing_logfiles']             => String[1],
    Optional['os_version_file']              => Stdlib::Absolutepath,
    Optional['package_manager']              => String,
    Optional['package_name']                 => String[1],
    Optional['passwd_file']                  => Stdlib::Absolutepath,
    Optional['phalanx2_dirtest']             => Boolean,
    Optional['pkgmgr_no_verfy']              => Array[Stdlib::Absolutepath],
    Optional['port_path_whitelist']          => Array[String[1]],
    Optional['port_whitelist']               => Array[String[1]],
    Optional['pwdless_accounts']             => Array[String[1]],
    Optional['readlink_cmd']                 => String[1],
    Optional['rotate_mirrors']               => Boolean,
    Optional['rtkt_dir_whitelist']           => Array[String[1]],
    Optional['rtkt_file_whitelist']          => Array,
    Optional['scan_mode_dev']                => Enum['THOROUGH', 'LAZY'],
    Optional['scanrootkitmode']              => String[1],
    Optional['scriptdir']                    => Stdlib::Absolutepath,
    Optional['scriptwhitelist']              => Array,
    Optional['shared_lib_whitelist']         => Array[Stdlib::Absolutepath],
    Optional['show_lockmsgs']                => Boolean,
    Optional['show_summary_time']            => String[1],
    Optional['show_summary_warnings_number'] => Boolean,
    Optional['ssh_config_dir']               => Stdlib::Absolutepath,
    Optional['startup_paths']                => Stdlib::Absolutepath,
    Optional['stat_cmd']                     => String[1],
    Optional['suspscan_dirs']                => Array[String[1]],
    Optional['suspscan_maxsize']             => Variant[Integer[0], String[1]],
    Optional['suspscan_temp']                => Stdlib::Absolutepath,
    Optional['suspscan_thresh']              => Variant[Integer[0], String[1]],
    Optional['syslog_config_file']           => Array[Stdlib::Absolutepath],
    Optional['tmpdir']                       => Stdlib::Absolutepath,
    Optional['uid0_accounts']                => Array[String[1]],
    Optional['unhide_tests']                 => String[1],
    Optional['unhidetcp_opts']               => String[1],
    Optional['update_lang']                  => Array[Rkhunter::Language],
    Optional['update_mirrors']               => Boolean,
    Optional['updt_on_os_change']            => String[1],
    Optional['use_locking']                  => Boolean,
    Optional['use_sunsum']                   => Boolean,
    Optional['use_syslog']                   => String,
    Optional['user_fileprop_files_dirs']     => Array[String[1]],
    Optional['warn_on_os_change']            => String[1],
    Optional['web_cmd']                      => String[1],
    Optional['whitelisted_is_white']         => Boolean,
    Optional['writewhitelist']               => Array[Stdlib::Absolutepath],
    Optional['xinetd_allowed_svc']           => Array[String[1]],
    Optional['xinetd_conf_path']             => Stdlib::Absolutepath,
  }
]
